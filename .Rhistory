caption='Fonte: Banco Mundial'
)
ggplot(data=co2xpop %>% filter(code=="BRA"), aes(x=year, y=co2xpop)) +
geom_boxplot(stat="identity", fill="skyblue") +
theme_minimal() +
xlab('Ano (1960-2013)') +
ylab('Emiss천es (kt)') +
labs(
title='Emiss천es de CO2 per capita no Brasil',
caption='Fonte: Banco Mundial'
)
bar
ggplot(data=co2xpop %>% filter(code=="BRA"), aes(x=year, y=co2xpop)) +
geom_bar(stat="identity", fill="skyblue") +
theme_minimal() +
xlab('Ano (1960-2013)') +
ylab('Emiss천es (kt)') +
labs(
title='Emiss천es de CO2 per capita no Brasil',
caption='Fonte: Banco Mundial'
)
miami <- read_csv('https://journalismcourses.org/courses/DE0618/SchoolsMiamiDade.csv')
write_csv(miami, "data/miami.csv", na="")
View(miami)
View(miami)
ggplot(miami, aes(x=SchoolGrade)) +
geom_bar(fill="skyblue") +
theme_minimal()
View(miami)
count(miami$SchoolGrade)
nrows(miami
)
nrow(miami)
miami %>%
group_by(SchoolGrade) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
# Percent
miami_percent <- miami %>%
group_by(SchoolGrade) %>%
summarise (count = n()) %>%
mutate(percent = n / sum(n))
# Percent
miami_percent <- miami %>%
group_by(SchoolGrade) %>%
summarise (count = n()) %>%
mutate(percent = count / sum(n))
# Percent
miami_percent <- miami %>%
group_by(SchoolGrade) %>%
summarise (count = n()) %>%
mutate(percent = count / sum(count))
View(miami_percent)
ggplot(miami_percent, aes(x=percent)) +
geom_bar(fill="skyblue") +
theme_minimal()
View(miami)
View(miami_percent)
View(miami_percent)
ggplot(miami_percent, aes(x=SchoolGrade, y=percent)) +
geom_bar(stat="identity", fill="skyblue") +
theme_minimal()
# View of school's grades
ggplot(miami, aes(x=SchoolGrade)) +
geom_bar(fill="skyblue") +
theme_minimal()
# View of school's grades (count)
ggplot(miami, aes(x=SchoolGrade)) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill="skyblue") +
theme_minimal()
# View of school's grades (percent)
ggplot(miami_percent, aes(x=SchoolGrade)) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill="skyblue") +
theme_minimal()
# View of school's grades (percent)
ggplot(miami, aes(x=SchoolGrade)) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill="skyblue") +
theme_minimal()
miami <- read_csv('https://journalismcourses.org/courses/DE0618/SchoolsMiamiDade.csv')
# write_csv(miami, "data/miami.csv", na="") # Data backup
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
# View of school's grades
ggplot(miami, aes(x=SchoolGrade)) +
geom_bar(fill="skyblue") +
theme_minimal()
# View of school's grades (percent)
ggplot(miami, aes(x=SchoolGrade)) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill="skyblue") +
theme_minimal()
# View of school's grades (percent)
ggplot(miami, aes(x=SchoolGrade)) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill="skyblue") +
ylab('percent') +
theme_minimal()
# View of school's grades (percent)
ggplot(miami, aes(x=SchoolGrade)) +
geom_bar(aes(y = (..count..)/sum(..count..)*100), fill="skyblue") +
ylab('percent') +
theme_minimal()
View(miami)
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_bar(fill="skyblue") +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_bar(fill="skyblue", width=10) +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_bar(fill="skyblue", width=10, binwidth = 1) +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", width=10, binwidth = 1) +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", binwidth = 1) +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", binwidth = 1) +
theme_minimal() +
scale_y_continuous(breaks = 1:16)
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", binwidth = 1) +
theme_minimal() +
scale_y_continuous(breaks = 1:2)
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", binwidth = 1) +
theme_minimal() +
scale_y_continuous(breaks = 1:20)
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", binwidth = 2) +
theme_minimal() +
scale_y_continuous(breaks = 1:20)
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", binwidth = 3) +
theme_minimal() +
scale_y_continuous(breaks = 1:20)
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", binwidth = 3) +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue") +
theme_minimal()
geom_histogram(aes(y = (..count..)/sum(..count..), fill="skyblue", position = "identity", binwidth = 1) +
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(aes(y = (..count..)/sum(..count..)), fill="skyblue", position = "identity", binwidth = 1) +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(aes(y = (..count..)/sum(..count..)), fill="skyblue", position = "identity", binwidth = 1) +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(aes(y = (..count..)/sum(..count..)), fill="skyblue", position = "identity", binwidth = 1) +
theme_minimal()
position = "identity", binwidth = 1
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", position = "identity", binwidth = 1) +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", position = "identity") +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue") +
theme_minimal()
, position = "identity"
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", position = "identity") +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue", position = "stack") +
theme_minimal()
# View of reading scores
ggplot(miami, aes(x=Reading2013)) +
geom_histogram(fill="skyblue") +
theme_minimal()
# View of reading scores (math)
ggplot(miami, aes(x=Math2013)) +
geom_histogram(fill="skyblue") +
theme_minimal()
View(miami)
# Scatter plot of math x reading
ggplot(miami, aex(x=Math2013, y=Reading2013)) +
geom_point()
# Scatter plot of math x reading
ggplot(miami, aes(x=Math2013, y=Reading2013)) +
geom_point()
# Scatter plot of math x reading
ggplot(miami, aes(x=Math2013, y=Reading2013)) +
geom_point(fill="skyblue") +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami, aes(x=Math2013, y=Reading2013)) +
geom_point(fill="skyblue") +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013), fill="skyblue") +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013, fill="skyblue")) +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami, aes(x=Math2013, y=Reading2013)) +
geom_point() +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami, aes(x=Math2013, y=Reading2013)) +
geom_point(color="red") +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013), color="red") +
geom_point(aes(y=Reading2013), color="blue") +
theme_minimal()
View(miami)
=Math2013
# Scatter plot of math x reading
ggplot(miami, aes(x=Math2013, y=Reading2013)) +
geom_point(color=Math2013) +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013), color=Math2013) +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013), color=Math2013) +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013, color=Math2013)) +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013, color=c("red", "blue"))) +
theme_minimal()
View(miami)
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=0)) +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=0)) +
geom_point(aes(y=Reading2013, x=0)) +
theme_minimal()
Reading2013
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013, color=c("red", "blue"))) +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013), fill= "red") +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013), fill="red") +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013)) +
theme_minimal()
View(miami)
View(miami)
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013)) + # to-do: discover how to color differently x and y axis
facet_wrap(~BoardDistrict) +
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013)) + # to-do: discover how to color differently x and y axis
facet_grid(~BoardDistrict) + # Divide por distritos
theme_minimal()
# Scatter plot of math x reading
ggplot(miami) +
geom_point(aes(x=Math2013, y=Reading2013)) + # to-do: discover how to color differently x and y axis
facet_wrap(~BoardDistrict) + # Divide por distritos
theme_minimal()
gap <- read_csv('https://journalismcourses.org/courses/DE0618/Gapminder2012.csv')
write_csv(gap, "data/gapminder2012.csv", na="") # Data backup
View(miami)
View(gap)
View(gap)
st_read('data/world/TM_WORLD_BORDERS-0.3.shp')
sf_read('data/world/TM_WORLD_BORDERS-0.3.shp')
library(sf)
sf_read('data/world/TM_WORLD_BORDERS-0.3.shp')
st_read('data/world/TM_WORLD_BORDERS-0.3.shp')
ggplot() +
geom_sf(st_read('data/world/TM_WORLD_BORDERS-0.3.shp'))
ggplot(st_read('data/world/TM_WORLD_BORDERS-0.3.shp')) +
geom_sf()
options(device="X11")
X11.options(type="cairo")
library(sf)
ggplot(st_read('data/world/TM_WORLD_BORDERS-0.3.shp')) +
geom_sf()
country <- read_csv('https://journalismcourses.org/courses/DE0618/CountyData.csv')
# write_csv(country, "data/country.csv", na="") # Data backup
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
summary(country$`C Income/Capita`) # Summary (video 3)
# Exporing correlations
ggplot(country, aes(x=`C Income/Capita`, y=College2014)) +
geom_point(aes(color=Region)) + # Color by region (video 7)
theme_minimal() +
stat_smooth(se=F) + # Displays correlation in plot / se=F hides confidence level (video 8)
facet_wrap(~Region) # Create different plots for different regions (video 5)
cor(x=country$`C Income/Capita`, y=country$College2014, use="complete.obs") # correlation (number) / use="complete.obs" removes NAs (video 8)
# maps (video 9)
library(tigris)
options(tigris_class = "sf")
# If you're a Mac user, download Quartz and run options below. More info: http://learn.r-journalism.com/en/mapping/static_maps/static-maps/
#options(device = "X11")
#X11.options(type = "cairo")
us <- states(cb=T)
country <- read_csv('https://journalismcourses.org/courses/DE0618/CountyData.csv')
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
summary(country$`C Income/Capita`) # Summary (video 3)
# Exporing correlations
ggplot(country, aes(x=`C Income/Capita`, y=College2014)) +
geom_point(aes(color=Region)) + # Color by region (video 7)
theme_minimal() +
stat_smooth(se=F) + # Displays correlation in plot / se=F hides confidence level (video 8)
facet_wrap(~Region) # Create different plots for different regions (video 5)
cor(x=country$`C Income/Capita`, y=country$College2014, use="complete.obs") # correlation (number) / use="complete.obs" removes NAs (video 8)
# maps (video 9)
library(tigris)
options(tigris_class = "sf")
# If you're a Mac user, download Quartz and run options below. More info: http://learn.r-journalism.com/en/mapping/static_maps/static-maps/
#options(device = "X11")
#X11.options(type = "cairo")
us <- states(cb=T) # Download US states' shape file using library tigris
country <- country %>% mutate(StateName=str_split(country$CountyState, ", ", simplify=T)[,-1]) # Create proper State column to join with map data
us_country <- left_join(country, us, by=c("StateName"= "NAME")) # Join map data to other data
country <- country %>% mutate(StateName=str_split(country$CountyState, ", ", simplify=T)[,-1]) # Create proper State column to join with map data
library(stringr)
# maps (video 9)
library(tigris)
options(tigris_class = "sf")
# If you're a Mac user, download Quartz and run options below. More info: http://learn.r-journalism.com/en/mapping/static_maps/static-maps/
options(device = "X11")
# If you're a Mac user, download Quartz and run options below. More info: http://learn.r-journalism.com/en/mapping/static_maps/static-maps/
#options(device = "X11")
X11.options(type = "cairo")
country <- country %>% mutate(StateName=str_split(country$CountyState, ", ", simplify=T)[,-1]) # Create proper State column to join with map data
us_country <- left_join(country, us, by=c("StateName"= "NAME")) # Join map data to other data
ggplot(us_country) + # Plot US map using ggplot + sf
geom_sf(aes(fill=HispanicPercentage)) +
scale_fill_viridis_c() +
coord_sf(xlim=c(-67, -125), ylim=c(23, 50)) # Rough cut of US states (minus Hawaii and Alaska)
a <- us_country %>% filter(StateName=="Texas") %>% select(HispanicPercentage)
View(a)
# maps (video 9)
library(tigris)
options(tigris_class = "sf")
# If you're a Mac user, download Quartz and run options below. More info: http://learn.r-journalism.com/en/mapping/static_maps/static-maps/
options(device = "X11")
# If you're a Mac user, download Quartz and run options below. More info: http://learn.r-journalism.com/en/mapping/static_maps/static-maps/
#options(device = "X11")
X11.options(type = "cairo")
ggplot(us_country) + # Plot US map using ggplot + sf
geom_sf(aes(fill=HispanicPercentage)) +
scale_fill_viridis_c() +
coord_sf(xlim=c(-67, -125), ylim=c(23, 50)) # Rough cut of US states (minus Hawaii and Alaska)
ggplot(us_country) + # Plot US map using ggplot + sf
geom_sf(aes(fill=HispanicPercentage)) +
scale_fill_viridis_c() +
coord_sf(xlim=c(-67, -125), ylim=c(23, 50)) # Rough cut of US states (minus Hawaii and Alaska)
# maps (video 9)
library(tigris)
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
summary(country$`C Income/Capita`) # Summary (video 3)
# Exporing correlations
ggplot(country, aes(x=`C Income/Capita`, y=College2014)) +
geom_point(aes(color=Region)) + # Color by region (video 7)
theme_minimal() +
stat_smooth(se=F) + # Displays correlation in plot / se=F hides confidence level (video 8)
facet_wrap(~Region) # Create different plots for different regions (video 5)
cor(x=country$`C Income/Capita`, y=country$College2014, use="complete.obs") # correlation (number) / use="complete.obs" removes NAs (video 8)
# maps (video 9)
library(tigris)
options(tigris_class = "sf")
us <- states(cb=T) # Download US states' shape file using library tigris
country <- country %>% mutate(StateName=str_split(country$CountyState, ", ", simplify=T)[,-1]) # Create proper State column to join with map data
us_country <- left_join(country, us, by=c("StateName"= "NAME")) # Join map data to other data
ggplot(us_country) + # Plot US map using ggplot + sf
geom_sf(aes(fill=HispanicPercentage)) +
scale_fill_viridis_c() +
coord_sf(xlim=c(-67, -125), ylim=c(23, 50)) # Rough cut of US states (minus Hawaii and Alaska)
country <- read_csv('https://journalismcourses.org/courses/DE0618/CountyData.csv')
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
country <- read_csv('https://journalismcourses.org/courses/DE0618/CountyData.csv')
# write_csv(country, "data/country.csv", na="") # Data backup
summary(country$`C Income/Capita`) # Summary (video 3)
# Exporing correlations
ggplot(country, aes(x=`C Income/Capita`, y=College2014)) +
geom_point(aes(color=Region)) + # Color by region (video 7)
theme_minimal() +
stat_smooth(se=F) + # Displays correlation in plot / se=F hides confidence level (video 8)
facet_wrap(~Region) # Create different plots for different regions (video 5)
cor(x=country$`C Income/Capita`, y=country$College2014, use="complete.obs") # correlation (number) / use="complete.obs" removes NAs (video 8)
# maps (video 9)
library(tigris)
options(tigris_class = "sf")
# If you're a Mac user, download Quartz and run options below. More info: http://learn.r-journalism.com/en/mapping/static_maps/static-maps/
#options(device = "X11")
#X11.options(type = "cairo")
us <- states(cb=T) # Download US states' shape file using library tigris
country_states <- country %>% mutate(StateName=str_split(country$CountyState, ", ", simplify=T)[,-1]) %>%  # Create proper State column to join with map data
group_by(StateName) %>% summarize(income=sum(`C Income/Capita`))
# Fix states's name
country$State <- str_replace_all(country$State, c("Alabama"="AL", "Alaska"="AK", "Arizona"="AZ", "Arkansas"="AR",
"California"="CA", "Colorado"="CO", "Connecticut"="CT", "Delaware"="DE", "Florida"="FL"))
country <- country %>% select(State, `C Income/Capita`, College2014) # Select data we want
us_country <- left_join(country, us, by=c("State"= "STUSPS")) # Join map data to other data
ggplot(us_country) + # Plot US map using ggplot + sf
geom_sf(aes(fill=College2014)) +
scale_fill_viridis_c() +
coord_sf(xlim=c(-67, -125), ylim=c(23, 50)) # Rough cut of US states (minus Hawaii and Alaska)
# If you're a Mac user, download Quartz and run options below. More info: http://learn.r-journalism.com/en/mapping/static_maps/static-maps/
options(device = "X11")
X11.options(type = "cairo")
ggplot(us_country) + # Plot US map using ggplot + sf
geom_sf(aes(fill=College2014)) +
scale_fill_viridis_c() +
coord_sf(xlim=c(-67, -125), ylim=c(23, 50)) # Rough cut of US states (minus Hawaii and Alaska)
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
country <- read_csv('https://journalismcourses.org/courses/DE0618/CountyData.csv')
# write_csv(country, "data/country.csv", na="") # Data backup
summary(country$`C Income/Capita`) # Summary (video 3)
# Exporing correlations
ggplot(country, aes(x=`C Income/Capita`, y=College2014)) +
geom_point(aes(color=Region)) + # Color by region (video 7)
theme_minimal() +
stat_smooth(se=F) + # Displays correlation in plot / se=F hides confidence level (video 8)
facet_wrap(~Region) # Create different plots for different regions (video 5)
cor(x=country$`C Income/Capita`, y=country$College2014, use="complete.obs") # correlation (number) / use="complete.obs" removes NAs (video 8)
# maps (video 9)
library(tigris)
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
country <- read_csv('https://journalismcourses.org/courses/DE0618/CountyData.csv')
# write_csv(country, "data/country.csv", na="") # Data backup
summary(country$`C Income/Capita`) # Summary (video 3)
# Exporing correlations
ggplot(country, aes(x=`C Income/Capita`, y=College2014)) +
geom_point(aes(color=Region)) + # Color by region (video 7)
theme_minimal() +
stat_smooth(se=F) + # Displays correlation in plot / se=F hides confidence level (video 8)
facet_wrap(~Region) # Create different plots for different regions (video 5)
cor(x=country$`C Income/Capita`, y=country$College2014, use="complete.obs")
options(device = "X11")
X11.options(type = "cairo")
library(tigris)
options(tigris_class = "sf")
us <- states(cb=T) # Download US states' shape file using library tigris
country_states <- country %>% mutate(StateName=str_split(country$CountyState, ", ", simplify=T)[,-1]) %>%  # Create proper State column to join with map data
group_by(StateName) %>% summarize(income=sum(`C Income/Capita`))
# Fix states's name
country$State <- str_replace_all(country$State, c("Alabama"="AL", "Alaska"="AK", "Arizona"="AZ", "Arkansas"="AR",
"California"="CA", "Colorado"="CO", "Connecticut"="CT", "Delaware"="DE", "Florida"="FL"))
country <- country %>% select(State, `C Income/Capita`, College2014) # Select data we want
us_country <- left_join(country, us, by=c("State"= "STUSPS")) # Join map data to other data
# Plot US map using ggplot + sf
ggplot(us_country) +
geom_sf(aes(fill=College2014)) +
scale_fill_viridis_c() +
coord_sf(xlim=c(-67, -125), ylim=c(23, 50)) # Rough cut of US states (minus Hawaii and Alaska)
